#برای پراکسی کردن درخواست‌ها به FastAPI و سرو فایل‌های استاتیک

events {}

http {
    server {                   #این بلاک کل تنظیمات یک سرور مجازی (Virtual Host) رو مشخص می‌کنه.
        listen 80;                  #به Nginx می‌گه که روی پورت ۸۰ گوش بده (پورت پیش‌فرض HTTP).
                               #اگر بخوای HTTPS داشته باشی، باید بنویسی: listen 443 ssl; و SSL cert هم تنظیم کنی.

        server_name localhost;           #مشخص می‌کنه که این پیکربندی برای کدوم دامین هست.
                               #فقط وقتی کاربر به example.com مراجعه کرد، این بلاک فعال میشه.
                               #localhost یعنی برای تست محلیه.

        location / {            #می‌گه برای هر درخواستی به مسیر / (ریشه)، این کارها رو انجام بده.
                                #اگه بخوای فقط یه مسیر خاص مثلاً /api رو هدایت کنی باید بنویسی: location /api {

            proxy_pass         http://fastapi-app:8000;               #می‌گه تمام درخواست‌های ورودی به مسیر/رو بفرست به این آدرس:http://app:8000
                               #اینجا app  نام سرویسیه که توی Docker Compose تعریف کردیم (همون سرویسی که FastAPI توشه)
                               #یعنی انگار داره می‌گه: «بفرست برای کانتینری به اسم app روی پورت ۸۰۰۰»

                               #این ۳ خط هدرهایی رو تنظیم می‌کنن که برای امنیت، لاگ‌گیری یا تشخیص IP مفید هستن:
            proxy_set_header   Host $host;
                               #آدرس هاست اصلی رو منتقل می‌کنه به backend (مثلاً FastAPI بفهمه درخواست از کجا اومده)

            proxy_set_header   X-Real-IP $remote_addr;
                               #این IP واقعی کاربر رو به backend پاس می‌ده.

            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
                               #زنجیره‌ای از IPهای درخواست‌دهنده‌ها رو منتقل می‌کنه (در درخواست‌هایی که از چندین پراکسی عبور کرده‌اند).

            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /static/ {    #اظلاعات مربوط به پوشه statics و صفحه وب ما
            alias /app/static/;
        }
    }
}
